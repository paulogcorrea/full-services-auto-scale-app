version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: nomad-postgres
    environment:
      POSTGRES_USER: nomad_services
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: nomad_services
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nomad_services"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nomad-network
    restart: unless-stopped

  # Consul
  consul:
    image: hashicorp/consul:1.21
    container_name: nomad-consul
    command: ["consul", "agent", "-dev", "-client=0.0.0.0", "-log-level=INFO"]
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    volumes:
      - consul_data:/consul/data
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nomad-network
    restart: unless-stopped

  # Nomad
  nomad:
    image: hashicorp/nomad:1.7
    container_name: nomad-server
    command: ["nomad", "agent", "-dev", "-bind=0.0.0.0", "-log-level=INFO"]
    ports:
      - "4646:4646"
      - "4647:4647"
      - "4648:4648"
    volumes:
      - nomad_data:/nomad/data
      - ./jobs:/jobs:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NOMAD_ADDR=http://0.0.0.0:4646
    depends_on:
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nomad", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nomad-network
    restart: unless-stopped
    privileged: true

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: nomad-backend
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=nomad_services
      - DB_PASSWORD=secure_password
      - DB_NAME=nomad_services
      - DB_SSL_MODE=disable
      - JWT_SECRET=your-very-secure-jwt-secret-key-here
      - NOMAD_ADDR=http://nomad:4646
      - NOMAD_JOBS_PATH=/jobs
      - CORS_ORIGINS=http://localhost:4200,http://localhost:3000
    volumes:
      - ./jobs:/jobs:ro
      - ./logs:/var/log/nomad-services-api
    depends_on:
      postgres:
        condition: service_healthy
      nomad:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nomad-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: nomad-frontend
    ports:
      - "4200:80"
    environment:
      - API_URL=http://localhost:8080/api/v1
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nomad-network
    restart: unless-stopped

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: nomad-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - nomad-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  consul_data:
    driver: local
  nomad_data:
    driver: local

networks:
  nomad-network:
    driver: bridge
